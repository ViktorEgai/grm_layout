jQuery(document).ready(function ($) {
	$("input[type=tel]").inputmask("+7 999 999 99 99");
	$("[data-fancybox]").fancybox({
		autoFocus: false,
		touch: false,
	});

	if ($(window).width() < 992) {
		$(".info-item-services").after($(".about"));
		$(".single-vakancy-card").after($(".agent"));
		$(".calendar-wrapper").after($(".calendar__btn"));
		$(".tarif-slider").before($(".tarif__title"));
		// toggle widget
		$(".widget__logo").on("click", function (e) {
			e.preventDefault();
			$(".widget-block").slideToggle();
			$(".widget-block").toggleClass("active");
		});
	} else {
		$(".info").after($(".about"));
		$(".sidebar-banner").before($(".agent"));

		// toggle widget
		$(".widget__logo").on("mouseenter", function () {
			$(".widget-block").slideDown();
		});
		$(".widget").on("mouseleave", function () {
			$(".widget-block").slideUp();
		});

		$(".has-children").each(function () {
			const userBlock = $(".header-user-block");

			$(this).append(userBlock);
		});
	}
	$(window).resize(function () {
		if ($(window).width() < 992) {
			$(".info-item-services").after($(".about"));
			$(".single-vakancy-card").after($(".agent"));
		} else {
			$(".info").after($(".about"));
			$(".sidebar-banner").before($(".agent"));
		}
	});
	$(".cards-item__link").on("click", function (e) {
		e.preventDefault();

		$(this).closest(".cards-item").toggleClass("active");
	});
	$(".cards-item-close").on("click", function (e) {
		e.preventDefault();

		$(this).closest(".cards-item").toggleClass("active");
	});

	$(".dropdown-item__title").on("click", function () {
		$(this).next().slideToggle();
	});

	$(".header-mobile-submenu, .header-submenu").prev().append(`<span class="arrow"><svg width="12" height="7" viewBox="0 0 12 7" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10.3333 1L5.66667 5.66667L1 1" stroke="white" stroke-opacity="0.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</span>`);
	$(".header-submenu").parents(".header-menu__item").addClass("has-children");

	$(".header-menu-btn").on("click", function () {
		$(".header-nav").slideToggle();
		$(this).toggleClass("active");
		$("body").toggleClass("overflow");
	});
	$(".header-menu__item .arrow").on("click", function (e) {
		e.preventDefault();
		$(this).parents(".has-children").addClass("active");

		$(this).parent().next().slideToggle();
		$(this).toggleClass("active");
		if ($(this).parents(".has-children").find(".arrow.active").length == 0) {
			$(this).parents(".has-children").removeClass("active");
		}
	});
	let subMenuHeight = 0;
	$(".header-submenu").each(function () {
		if ($(this).outerHeight() > subMenuHeight) {
			subMenuHeight = $(this).outerHeight();
		}
	});

	$(".header").css("--mh", subMenuHeight + 150 + "px");
	$(window).resize(function () {
		$(".header").css("--mh", subMenuHeight + 150 + "px");
	});

	var individualGrid = $(".individual-grid .grid").isotope({
		itemSelector: ".grid-item",
		layoutMode: "fitRows",
		fitRows: {
			equalheight: true,
		},
	});
	$(".individual-nav").on("click", "button", function () {
		var filterValue = $(this).attr("data-filter");
		individualGrid.isotope({
			filter: filterValue,
		});
	});
	function partnersFilter() {
		var $grid = $(".loyalty-grid .grid").isotope({
			itemSelector: ".grid-item",
			layoutMode: "fitRows",
			fitRows: {
				equalheight: true,
			},
		});

		$(".loyalty-nav").on("click", "button", function () {
			var filterValue = $(this).attr("data-filter");
			$grid.isotope({
				filter: filterValue,
			});
		});
		$(".loyalty-item__tag").on("click", function (e) {
			e.preventDefault();
			var filterValue = $(this).attr("data-filter");
			$grid.isotope({
				filter: filterValue,
			});
			$(".loyalty-nav__item").each(function () {
				if ($(this).attr("data-filter") == filterValue) {
					$(this).addClass("active");
				} else {
					$(this).removeClass("active");
				}
			});
		});
		$(".loyalty-nav").each(function (i, buttonGroup) {
			var $buttonGroup = $(buttonGroup);
			$buttonGroup.on("click", "button", function () {
				$buttonGroup.find(".active").removeClass("active");
				$(this).addClass("active");
			});
		});
	}
	// filter();
	// загрузка партнеров по API

	function loadPartners() {
		const partnersAPI = "http://212.193.30.89:8000/api/logo_partners/";
		const navBlock = $(".loyalty-nav");
		const contentBlock = $(".loyalty .grid");

		function getContentItem(item, data) {
			// let link = item.link ? '<a href="#" class="loyalty-item__title">LIGALT</a>' : '';
			// let description = '<div class="loyalty-item__text">Юридическая компания по спорам с застройщиками</div>';
			let tag = `<a href="#" class="loyalty-item__tag" data-filter=".${data.translit}">#${data.name} </a>`;
			let image = `	<div class="loyalty-item__image">
			<img src="${item.img}" alt="" />
		</div>`;
			let categorySlug = data.translit;
			let html = `<div class="grid-item ${categorySlug}">
				<div class="loyalty-item">					
					${image}	
					${tag}
				</div>
			</div>
			`;
			return html;
		}

		function getNavItem(item) {
			let slug = item.translit,
				name = item.name;
			let html = `<button data-filter=".${slug}" class="loyalty-nav__item">${name}</button>`;
			return html;
		}
		$.ajax({
			url: partnersAPI,
			dataType: "json",
			success: function (data) {
				console.log(data);

				data.forEach((item) => {
					navBlock.append(getNavItem(item));
					item.kategoriya.forEach((element) => {
						contentBlock.append(getContentItem(element, item));
					});
				});

				partnersFilter();
			},
		});
	}
	loadPartners();

	if (!localStorage.getItem("cookiesAccepted")) {
		$("#cookie-popup").fadeIn(500);
	}

	$("#accept-cookies").click(function () {
		localStorage.setItem("cookiesAccepted", "true");
		$("#cookie-popup").fadeOut(500);
	});
});

$(document).ready(function () {
	function adjustFooterMenu() {
		if ($(window).width() < 1200) {
			// Если меньше 1200px, распределяем элементы поровну между двумя списками
			if ($(".footer-menu").length === 3) {
				// Сливаем все элементы в один массив
				const allItems = [];
				$(".footer-menu").each(function () {
					$(this)
						.find("li")
						.each(function () {
							allItems.push($(this));
						});
				});

				// Удаляем текущие списки
				$(".footer-menu").remove();

				// Создаем два новых списка
				const half = Math.ceil(allItems.length / 2);
				const firstHalf = allItems.slice(0, half);
				const secondHalf = allItems.slice(half);

				const menuContainer = $(".footer-nav");
				const firstMenu = $('<ul class="footer-menu"></ul>');
				const secondMenu = $('<ul class="footer-menu"></ul>');

				firstHalf.forEach((item) => firstMenu.append(item));
				secondHalf.forEach((item) => secondMenu.append(item));

				menuContainer.append(firstMenu).append(secondMenu);
				$("#footer-menu-container").append(menuContainer); // Добавляем списки в футер
			}
		} else {
			// Если больше или равно 1200px, возвращаем три списка
			if ($(".footer-menu").length === 2) {
				// Сливаем все элементы обратно в массив
				const allItems = [];
				$(".footer-menu").each(function () {
					$(this)
						.find("li")
						.each(function () {
							allItems.push($(this));
						});
				});

				// Удаляем текущие списки
				$(".footer-menu").remove();

				// Создаем три новых списка
				const third = Math.ceil(allItems.length / 3);
				const firstThird = allItems.slice(0, third);
				const secondThird = allItems.slice(third, third * 2);
				const thirdThird = allItems.slice(third * 2);

				const menuContainer = $(".footer-nav");
				const firstMenu = $('<ul class="footer-menu"></ul>');
				const secondMenu = $('<ul class="footer-menu"></ul>');
				const thirdMenu = $('<ul class="footer-menu"></ul>');

				firstThird.forEach((item) => firstMenu.append(item));
				secondThird.forEach((item) => secondMenu.append(item));
				thirdThird.forEach((item) => thirdMenu.append(item));

				menuContainer.append(firstMenu).append(secondMenu).append(thirdMenu);
				$("#footer-menu-container").append(menuContainer); // Добавляем списки в футер
			}
		}
	}

	// Запуск функции при загрузке страницы
	adjustFooterMenu();

	// Запуск функции при изменении размера окна
	$(window).resize(function () {
		adjustFooterMenu();
	});
});

$(document).ready(function () {
	setTimeout(function () {
		// Рассчитываем высоту динамически
		var $arrowBlock = $(".arrow-block");
		var $arrowWrapper = $(".arrow-block-wrapper");
		var $arrowBottom = $(".arrow-block-bottom");
		var $arrowBottomFront = $(".arrow-block-bottom-front");

		if ($arrowBlock.length && $arrowWrapper.length && $arrowBottom.length) {
			// $(".arrow-block__bolt").css("height", $arrowWrapper.innerHeight() * 0.48 + "px");
			if ($(window).width() > 992) {
				// Инициализация GSAP и ScrollTrigger
				ScrollTrigger.create({
					trigger: $arrowBottom[0],
					start: "top 80%",
					end: "+=" + $arrowWrapper.innerHeight() + "px bottom",
					pin: true,
					scrub: true,
				});
				ScrollTrigger.create({
					trigger: $arrowBottomFront[0],
					start: "top 80%",
					end: "+=" + $arrowWrapper.innerHeight() + "px bottom",
					pin: true,
					scrub: true,
				});

				// Анимация для болта (стрелы)
				gsap.from(".arrow-block__bolt", {
					scrollTrigger: {
						trigger: $arrowBlock[0],
						start: "top 20%",
						end: "+=" + $arrowBlock.innerHeight() / 2, // Пример динамической высоты
					},
					y: "-200%",
					duration: 0.6,
				});

				// Анимация для линии
				gsap.fromTo(
					".arrow-block__bolt",
					{
						height: $arrowWrapper.innerHeight() * 0.48 + "px", // Начальная высота
					},
					{
						// height: "100%", // Конечная высота, включая padding
						height: $arrowWrapper.innerHeight() + "px", // Конечная высота, включая padding
						scrollTrigger: {
							trigger: $arrowWrapper[0],
							start: "top 80%", // Начало анимации
							end: () => "+=" + $arrowWrapper.innerHeight() + "px", // Конец анимации
							scrub: 0.2, // Скроллинг плавный
						},
					}
				);

				// Анимация для тени
				gsap.from(".shadow", {
					scrollTrigger: {
						trigger: $arrowBlock[0],
						start: "top 20%",
						end: "+=" + $arrowBlock.innerHeight() / 2,
					},
					y: "-100%",
					opacity: 0,
					duration: 0.6,
				});
				$(".arrow-block__item").each(function (index) {
					let item = $(this);
					let x = "";
					if (index % 2 == 0) {
						x = "-10%";
					} else {
						x = "10%";
					}
					gsap.from(item, {
						scrollTrigger: {
							trigger: item,
							start: "-20% 30%",
							end: "center 40%",
							scrub: 1,
						},
						x: x,
						opacity: 0,
					});
				});
			} else {
				ScrollTrigger.create({
					trigger: $arrowBottom[0],
					start: "top 83%",
					end: "+=" + $arrowWrapper.innerHeight() + "px bottom",
					pin: true,
					scrub: true,
				});
				ScrollTrigger.create({
					trigger: $arrowBottomFront[0],
					start: "top 83%",
					end: "+=" + $arrowWrapper.innerHeight() + "px bottom",
					pin: true,
					scrub: true,
				});
				// Анимация для болта (стрелы)
				gsap.from(".arrow-block__bolt", {
					scrollTrigger: {
						trigger: $arrowBlock[0],
						start: "top 70%",
						end: "+=300px", // Пример динамической высоты
					},
					y: "-200%",
					duration: 0.6,
				});
				// Анимация для линии
				gsap.fromTo(
					".arrow-block__bolt",
					{
						height: $(".arrow-block__bolt").innerHeight() + "px", // Начальная высота
					},
					{
						// height: "100%", // Конечная высота, включая padding
						height: $arrowWrapper.innerHeight() + "px", // Конечная высота, включая padding
						scrollTrigger: {
							trigger: $arrowWrapper[0],
							start: "top 80%", // Начало анимации
							end: () => "+=" + $arrowWrapper.innerHeight() + "px", // Конец анимации
							scrub: 0.2, // Скроллинг плавный
						},
					}
				);
				gsap.from(".shadow", {
					scrollTrigger: {
						trigger: $arrowBlock[0],
						start: "top 70%",
						end: "+=" + $arrowBlock.innerHeight() / 2,
					},
					y: "-100%",
					opacity: 0,
					duration: 0.6,
				});
				$(".arrow-block__item").each(function (index) {
					let item = $(this);

					gsap.from(item, {
						scrollTrigger: {
							trigger: item,
							start: "-20% center",
							end: "center 40%",
							scrub: 0.1,
						},
						x: "-10%",
						opacity: 0,
					});
				});
			}
		} else {
			console.error("Не удалось найти элементы для анимации.");
		}

		$(".service-hero__title, .section-title, .dropdown-item, .stories, .about-slider, .top__title, .top__text, .hero-left, #map, .content-block-left, .agent-list-item, .steps-item, .fade-right").each(function () {
			let item = $(this);

			gsap.fromTo(
				item[0],
				{
					opacity: 0,
					x: "-100",
				},
				{
					opacity: 1,
					x: "0",
					scrollTrigger: item[0],
					duration: 1.2,
				}
			);
		});
		$(".map-block-right, .map-block-contacts, .sidebar, .service-hero-block__img, .fade-left").each(function () {
			let item = $(this);
			gsap.fromTo(
				item[0],
				{
					opacity: 0,
					x: " 100",
				},
				{
					opacity: 1,
					x: "0",
					scrollTrigger: item[0],
					duration: 1.2,
				}
			);
		});
		$(".sertificates-grid-item, .gallery-grid-item").each(function () {
			let item = $(this);
			gsap.fromTo(
				item[0],
				{
					opacity: 0,
					y: "-100",
				},
				{
					opacity: 1,
					y: "0",
					scrollTrigger: item[0],
					duration: 0.5,
				}
			);
		});

		$(".vakancy-card:not(.skip), .documents-block").each(function (index) {
			let item = $(this);

			if (index % 2 == 0) {
				gsap.fromTo(
					item[0],
					{
						opacity: 0,
						x: "-100",
					},
					{
						opacity: 1,
						x: "0",
						scrollTrigger: item[0],
						duration: 1.2,
					}
				);
			} else {
				gsap.fromTo(
					item[0],
					{
						opacity: 0,
						x: "100",
					},
					{
						opacity: 1,
						x: "0",
						scrollTrigger: item[0],
						duration: 1.2,
					}
				);
			}
		});

		gsap.fromTo(
			".circle",
			{
				opacity: 0,
				scale: "0",
			},
			{
				opacity: 1,
				scale: "1",
				scrollTrigger: ".circle",
				duration: 1.2,
			}
		);

		// Обновляем триггеры после загрузки
		ScrollTrigger.refresh();
	}, 200);
});

$(document).ready(function () {
	function numAnimation(block, elements, duration = 1500) {
		var $myElt = $(block); // whatever element you want to check

		var $window = $(window); // the window jQuery element
		var inWindow = false;
		if ($myElt.length > 0) {
			function startAnim() {
				var myTop = $myElt.offset().top; // the top (y) location of your element
				var windowTop = $window.scrollTop(); // the top of the window
				var windowBottom = windowTop + $window.height() - 100;

				if (myTop >= windowTop && myTop < windowBottom) {
					if (inWindow == false) {
						inWindow = true;
						if (inWindow) {
							$(elements).each(function () {
								var $this = $(this);
								jQuery({ Counter: 0 }).animate(
									{ Counter: $this.text() },
									{
										duration: duration,
										easing: "swing",
										step: function () {
											$this.text(Math.ceil(this.Counter));
										},
									}
								);
							});
						}
					}
					// element is in the window
				}
			}
			startAnim();

			$(window).on("scroll", function () {
				startAnim();
			});
		}
	}
	numAnimation(".hero", ".hero .num");
});

$(document).ready(function () {
	$(".btn").css("--deg", "68deg");

	$(".btn:not([disabled])").on("mouseenter", function () {
		const btn = $(this);

		let degree = parseInt(btn.css("--deg")) || 68; // начальное значение
		let animationFrame;

		function increase() {
			if (degree < 300) {
				degree += 5;
				btn.css("--deg", degree + "deg");
				animationFrame = requestAnimationFrame(increase);
			} else {
				cancelAnimationFrame(animationFrame);
			}
		}

		animationFrame = requestAnimationFrame(increase);
	});

	$(".btn:not([disabled])").on("mouseout", function () {
		const btn = $(this);
		let degree = parseInt(btn.css("--deg")) || 300; // начальное значение
		let animationFrame;

		function decrease() {
			if (degree > 68) {
				degree -= 5;
				btn.css("--deg", degree + "deg");
				animationFrame = requestAnimationFrame(decrease);
			} else {
				cancelAnimationFrame(animationFrame);
			}
		}

		animationFrame = requestAnimationFrame(decrease);
	});
});

$(document).ready(function () {
	if ($('[name="acceptance"]').is(":checked")) {
		$('[name="acceptance"]').parents("form").find("button").attr("disabled", false);
	} else {
		$('[name="acceptance"]').parents("form").find("button").attr("disabled", true);
	}
	$('[name="acceptance"]').on("change", function () {
		if ($(this).is(":checked")) {
			$(this).parents("form").find("button").attr("disabled", false);
		} else {
			$(this).parents("form").find("button").attr("disabled", true);
		}
	});
	$('[name="sertificate_time"]').on("change", function () {
		if ($(this).is(":checked") && $(this).val() == "second") {
			$("#sertificate_date_field").removeClass("d-none");
		} else {
			$("#sertificate_date_field").addClass("d-none");
		}
	});
	$('[name="file_type"], [name="file_type_2"], [name="file_type_3"], [name="file_type_4"]').on("change", function () {
		if ($(this).is(":checked")) {
			let value = $(this).val();
			const block = $(this)
				.parents(".form__field")
				.siblings('[data-id="' + value + '"]');
			const hiddenFields = $(this).parents(".form__field").siblings(".hidden-field");

			hiddenFields.hide();
			block.show();
		}
	});
	$("#file_input").on("change", function () {
		// Получаем список выбранных файлов
		const files = $(this)[0].files;
		if (files.length > 0) {
			// Формируем строку с именами файлов
			const fileNames = Array.from(files)
				.map((file) => file.name)
				.join(", ");
			// Обновляем текст в элементе #file-title
			$("#file-title").text(fileNames);
		} else {
			// Если файлы не выбраны, отображаем стандартный текст
			$("#file-title").text("Прикрепить документы");
		}
	});

	$(".form__file + input").on("change", function () {
		// Получаем список выбранных файлов
		const files = $(this)[0].files;
		const input = $(this);
		console.log(input.hasClass("file_excel"));

		if (input.hasClass("file_excel")) {
			if (files.length > 0) {
				let file = this.files[0];

				$(this).prev().find(".default").hide();
				$(this).prev().find(".upload-status .file-name").text(file.name);

				$(this).prev().find(".upload-status").addClass("active");
				let fileExt = file.name.split(".").pop().toLowerCase();
				let iconPath = "img/icons/file-icon.svg"; // Иконка по умолчанию
				let fileIcons = {
					pdf: "img/icons/pdf.svg",
					doc: "img/icons/doc.svg",
					docx: "img/icons/doc.svg",
					xls: "img/icons/excel.svg",
					xlsx: "img/icons/excel.svg",
					png: "img/icons/image.svg",
					jpg: "img/icons/image.svg",
					jpeg: "img/icons/image.svg",
					gif: "img/icons/image.svg",
					zip: "img/icons/zip.svg",
					rar: "img/icons/zip.svg",
				};

				if (fileIcons[fileExt]) {
					iconPath = fileIcons[fileExt];
				}

				$(this).prev().find(".file-icon").attr("src", iconPath);

				// Фейковая анимация загрузки
				let progress = 0;
				let interval = setInterval(function () {
					progress += 1;
					input
						.prev()
						.find(".progress")
						.css("width", progress + "%");
					input
						.prev()
						.find(".upload-percent")
						.text(progress + "%");

					if (progress >= 100) {
						clearInterval(interval);
					}
				}, 10);
			} else {
				$(this).prev().find(".default").show();
				$(this).prev().find(".upload-status").removeClass("active");
			}
		} else {
			if (files.length > 0) {
				// Формируем строку с именами файлов
				const fileNames = Array.from(files)
					.map((file) => file.name)
					.join(", ");
				// Обновляем текст в элементе #file-title
				$(this).prev().find(".default").hide();
				if (files.length > 1) {
					$(this).prev().find(".file-name").text(`Загружено ${files.length} файла(ов)`);
				} else {
					$(this).prev().find(".file-name").text(fileNames);
				}
				$(this).prev().find(".file-name").show();
			} else {
				$(this).prev().find(".file-name").hide();

				$(this).prev().find(".default").show();
			}
		}
	});

	$(".form").each(function () {
		$(this).validate({
			submitHandler: function (form) {
				console.log(form);

				successMessage();

				// $.ajax({
				// 	url: "submitHandler.php", // Ссылка на серверный обработчик
				// 	type: "POST",
				// 	data: $(form).serialize(),
				// 	success: function (response) {
				// 		swal;
				// 	},
				// 	error: function () {
				// 		alert("Произошла ошибка при отправке данных.");
				// 	},
				// });
				return false; // Останавливаем стандартное поведение формы
			},
		});
	});

	// Письмо
	$(".letter-form").on("submit", function (e) {
		e.preventDefault();
		$(this).addClass("sent");
		setTimeout(() => {
			$(".letter-form-back-top").addClass("active");
			$(".letter-form-block").hide(300);
		}, 1300);
		setTimeout(successMessage, 1800);
	});

	// квиз
	$(".quiz").each(function () {
		let quiz = $(this);
		let form = quiz.find(".quiz-form");
		let steps = quiz.find(".step");
		let pagination = quiz.find(".pagination");
		let currentStep = 0;
		let totalSteps = steps.length;

		form.validate({
			errorElement: "div",
			errorClass: "error",
		});

		function showStep(index) {
			steps.removeClass("active");
			$(steps[index]).addClass("active");
			pagination.text(`  ${index + 1}/${totalSteps}`);
		}

		quiz.find(".next").click(function () {
			if (form.valid()) {
				currentStep++;
				if (pagination.length > 0) {
					if (currentStep < totalSteps) {
						showStep(currentStep);
					}
				}
			}
		});

		quiz.find(".prev").click(function () {
			currentStep--;
			showStep(currentStep);
		});

		// form.submit(function (e) {
		// 	e.preventDefault();
		// 	if (form.valid()) successMessage();
		// });

		showStep(currentStep);
	});

	function successMessage() {
		$.fancybox.close();
		const customSwal = Swal.mixin({
			customClass: {
				confirmButton: "btn  ",
				cancelButton: "btn  ",
			},
			buttonsStyling: false,
		});
		console.log(customSwal);

		customSwal.fire({
			title: "Спасибо!",
			text: "Ваша заявка успешно отправлена!",
			icon: "success",
			// timer: 3000,
		});
		$(".btn").css("--deg", "68deg");
	}
});

$(document).ready(function () {
	$(".search-form-result").hide();
	$(".search-form-result").html('<div class="search-form-result-list"></div>');
	$(".search-form input").on("input", function () {
		const searchBtn = $(this).parents(".search-form").find(".search-form__btn");
		const searchClear = $(this).parents(".search-form").find(".search-form__clear");
		const searchResult = $(this).parents(".search-form").find(".search-form-result");
		const searchResultList = $(this).parents(".search-form").find(".search-form-result .search-form-result-list");
		const searchForm = $(this).parents(".search-form");
		let query = $(this).val().trim();

		if (query.length > 2) {
			$.ajax({
				url: searchApiUrl,
				dataType: "json",
				success: function (data) {
					let results = filterResults(data, query);
					displayResults(results);
				},
			});
		} else {
			searchBtn.show();
			searchClear.hide();
			searchResult.hide();
			searchForm.removeClass("active");
		}

		function filterResults(data, query) {
			let regex = new RegExp(query, "i"); // Регулярное выражение для поиска
			return data.filter((item) => regex.test(item.title)); // Фильтрация по заголовку
		}

		function displayResults(results) {
			searchBtn.hide();
			searchClear.show();
			searchResult.show();
			searchForm.addClass("active");
			searchResultList.html("").show();

			if (results.length === 0) {
				searchResultList.html("").append("<p>Ничего не найдено</p>");
				return;
			}

			results.forEach((item) => {
				let resultItem = `
							<a href="${item.url}" class="search-form-result-item">
							<img src="/static/img/icons/search.svg" alt="" />
							<span>${item.title}</span>
						</a>
                 
            `;
				searchResultList.append(resultItem);
			});
		}
	});

	$(".search-form__clear").on("click", function () {
		const searchResult = $(this).parents(".search-form").find(".search-form-result");
		const searchBtn = $(this).parents(".search-form").find(".search-form__btn");

		const searchForm = $(this).parents(".search-form");
		$(this).hide();
		$(this).parents(".search-form").find("input").val("");

		searchResult.hide();
		searchBtn.show();
		searchForm.removeClass("active");
	});
});

$(document).ready(function () {
	if ($(window).width() > 992) {
		let submenuheight = 0;
		$(".service-hero-submenu").each(function (index) {
			let id = "submenu-" + (index + 1);

			$(this).parent().attr("data-id", id);

			$(this).attr("id", id);

			$(this).prev().append(`<span class="arrow"><svg width="12" height="7" viewBox="0 0 12 7" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10.3333 1L5.66667 5.66667L1 1" stroke="white" stroke-opacity="0.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</span>`);
			$(this).parent().addClass("has-submenu");
			submenuheight = $(this).outerHeight() > submenuheight ? $(this).outerHeight() : submenuheight;
		});
		$(".service-hero-nav").css("--height", $(".service-hero-nav").outerHeight() + "px");
		$(".service-hero-nav").css("--hover-height", $(".service-hero-nav").outerHeight() + submenuheight + "px");
	} else {
		$(".service-hero-submenu").each(function (index) {
			let id = "submenu-" + (index + 1);

			$(this).parent().attr("data-id", id);

			$(this).attr("id", id);

			$(".service-hero-menu").after($(this));
			$(this).hide();
		});
		$(".service-hero-menu").clone().appendTo(".service-hero-nav").addClass("service-hero-menu-bottom").hide();

		function toggleMenu(main, clone) {
			$(main)
				.off("click", ".service-hero-menu__item")
				.on("click", ".service-hero-menu__item", function (e) {
					const id = $(this).data("id");
					const link = $(this).find("a");
					const index = $(this).index();
					const copyMenuLink = $(clone + " .service-hero-menu__item")
						.eq(index)
						.find("a");

					if (id) {
						e.preventDefault();

						if ($("#" + id).attr("style") == "display: block;") {
							$(".service-hero-submenu").hide();
							$(".service-hero-menu-bottom").hide();
							$(link).removeClass("active");
							copyMenuLink.removeClass("active");
						} else {
							$(".service-hero-submenu").hide();
							$(".service-hero-menu-bottom").show();
							$("#" + id).toggle();
							$(link).toggleClass("active");
							copyMenuLink.addClass("active");
						}
					}
				});
		}
		toggleMenu(".service-hero-menu-top", ".service-hero-menu-bottom");
		toggleMenu(".service-hero-menu-bottom", ".service-hero-menu-top");

		let isSyncingScroll = false;

		$(".service-hero-menu-top, .service-hero-menu-bottom").on("scroll", function () {
			if (!isSyncingScroll) {
				isSyncingScroll = true;
				let scrollLeft = $(this).scrollLeft();
				$(".service-hero-menu-top, .service-hero-menu-bottom").not(this).scrollLeft(scrollLeft);
				isSyncingScroll = false;
			}
		});
	}
});

$(document).ready(function () {
	const arrowRight = `<button class="next"><img src="/static/img/icons/arrow-right.svg" data-src></button>`;
	const arrowLeft = `<button class="prev"><img src="/static/img/icons/arrow-left.svg" data-src></button>`;

	$(".stories-slider").slick({
		dots: true,
		infinite: true,
		speed: 300,

		arrows: true,
		prevArrow: arrowLeft,
		nextArrow: arrowRight,
		slidesToShow: 4,
		slidesToScroll: 1,
		responsive: [
			{
				breakpoint: 992,
				settings: {
					slidesToShow: 3,
					slidesToScroll: 1,
					infinite: true,
					dots: true,
					speed: 1000,
					autoplaySpeed: 4000,
					autoplay: true,
					arrows: false,
					cssEase: "linear",
				},
			},
		],
	});
	$(".services-slider").slick({
		dots: false,
		infinite: true,
		speed: 2000,
		autoplaySpeed: 10,
		autoplay: true,
		arrows: false,
		slidesToShow: 1,
		slidesToScroll: 1,
		centerMode: true,
		variableWidth: true,
		cssEase: "linear",
	});
	$(".about-slider").slick({
		dots: true,
		infinite: false,
		speed: 300,
		arrows: false,
		fade: false,
		slidesToShow: 1,
		slidesToScroll: 1,
	});
	$(".news-slider").slick({
		dots: true,
		infinite: false,
		speed: 300,
		arrows: false,
		slidesToShow: 3,
		slidesToScroll: 1,
		responsive: [
			{
				breakpoint: 9999,
				settings: "unslick",
			},
			{
				breakpoint: 992,
				settings: {
					slidesToShow: 2,
					slidesToScroll: 1,
					dots: true,
				},
			},
			{
				breakpoint: 576,
				settings: {
					slidesToShow: 1,
					slidesToScroll: 1,
					dots: true,
				},
			},
		],
	});
	$(".vakancy-cards-slider").slick({
		dots: true,
		infinite: false,
		speed: 300,
		arrows: false,
		slidesToShow: 3,
		slidesToScroll: 1,
		responsive: [
			{
				breakpoint: 9999,
				settings: "unslick",
			},

			{
				breakpoint: 576,
				settings: {
					slidesToShow: 1,
					slidesToScroll: 1,
					dots: true,
				},
			},
		],
	});
	$(".comitet-members-slider").slick({
		dots: true,
		infinite: false,
		speed: 300,
		arrows: false,
		slidesToShow: 2,
		slidesToScroll: 1,
		responsive: [
			{
				breakpoint: 768,
				settings: {
					slidesToShow: 1,
					slidesToScroll: 1,
					dots: true,
				},
			},
		],
	});
	$(".member-cards-slider").slick({
		dots: true,
		infinite: false,
		speed: 300,
		arrows: false,
		slidesToShow: 2,
		slidesToScroll: 1,
		responsive: [
			{
				breakpoint: 768,
				settings: {
					slidesToShow: 1,
					slidesToScroll: 1,
					dots: true,
				},
			},
		],
	});
	$(".tarif-slider").slick({
		dots: true,
		infinite: false,
		speed: 300,
		arrows: false,
		slidesToShow: 2,
		slidesToScroll: 1,
		responsive: [
			{
				breakpoint: 768,
				settings: {
					slidesToShow: 1,
					slidesToScroll: 1,
					dots: true,
				},
			},
		],
	});
	$(".service-hero-sliders").removeClass("d-none");
	$(".service-hero-slider").each(function (index) {
		let $args = {
			dots: false,
			infinite: true,
			speed: 5000,
			autoplaySpeed: 10,
			autoplay: true,
			arrows: false,
			slidesToShow: 1,
			slidesToScroll: 1,
			centerMode: true,
			variableWidth: true,
			cssEase: "linear",
		};
		if (index % 2 !== 0) {
			$args["rtl"] = true;
			$(this).attr("dir", "rtl");
		}

		$(this).slick($args);
	});

	$(".service-hero-partners-slider").slick({
		dots: false,
		infinite: true,
		speed: 5000,
		autoplaySpeed: 10,
		autoplay: true,
		arrows: false,
		slidesToShow: 1,
		slidesToScroll: 1,
		centerMode: true,
		variableWidth: true,
		cssEase: "linear",
	});
});

$(document).ready(function () {
	$(".stories-slider__item").on("click", function (e) {
		e.preventDefault();
		let json = $(this).data("json");
		let stories = json.stories; // Получаем массив stories из JSON

		let data = `<div class="story-item-slider" id="story-item-slider">`;

		// Обрабатываем каждый элемент в stories
		stories.forEach(function (story) {
			if (story.url.match(/\.(mp4|mov|avi|webm)$/i)) {
				// Если это видео
				data += `
                <div class="story-item-slider__item">
                    <video width="100%" controls>
                        <source src="${story.url}" type="video/mp4" />
                    </video>
                </div>`;
			} else {
				// Если это изображение
				data += `
                <div class="story-item-slider__item" style="background-image: url('${story.url}')">
                    <img src="${story.url}" alt="" />
                </div>`;
			}
		});

		data += `</div>`;
		var storyId = $(this).data("id"); // Получаем ID истории

		if ($("#story-item-slider").hasClass("slick-initialized")) {
			$("#story-item-slider").slick("unslick");
		}

		$("#story-container").html(data); // Загружаем HTML

		$.fancybox.close(); // Закрываем прошлый Fancybox
		const arrowRight = `<button class="next"><img src="img/icons/arrow-right.svg" data-src></button>`;
		const arrowLeft = `<button class="prev"><img src="img/icons/arrow-left.svg" data-src></button>`;
		$.fancybox.open({
			src: "#story-popup",
			type: "inline",
			touch: false,
			beforeShow: function () {
				// Убираем autoplay при переключении на видео
				$("#story-item-slider").on("init", function () {
					setTimeout(() => {
						$("#story-item-slider video").each(function () {
							this.pause(); // Останавливаем все видео
							this.currentTime = 0; // Сбрасываем на начало
							console.log("Видео остановлено:", this);
						});
					}, 500); // Даем время слайдеру отрендериться
				});

				$("#story-item-slider").slick({
					infinite: false, // Не зацикливаем
					arrows: true, // Отключаем стрелки
					prevArrow: arrowLeft,
					nextArrow: arrowRight,
					dots: true, // Показываем точки
					autoplay: true, // Включаем автоматическое перелистывание
					autoplaySpeed: 5000, // Переключение каждые 5 секунд
					fade: true, // Плавное появление слайдов
					cssEase: "linear", // Линейное изменение
					speed: 600, // Скорость анимации
					pauseOnHover: false, // Не останавливать при наведении
					pauseOnFocus: false, // Не останавливать при фокусе
				});

				$("#story-item-slider").on("beforeChange", function (event, slick, currentSlide, nextSlide) {
					console.log("beforeChange", currentSlide);

					var currentVideo = $(slick.$slides[currentSlide]).find("video");
					var nextVideo = $(slick.$slides[nextSlide]).find("video");

					// Останавливаем текущее видео перед переключением
					if (currentVideo.length) {
						currentVideo[0].pause();
						currentVideo[0].currentTime = 0; // Сбрасываем к началу
					}

					// Если следующий слайд содержит видео — отключаем autoplay
					if (nextVideo.length) {
						slick.slickSetOption("autoplay", false, true);
					}
				});

				// После переключения проверяем, есть ли видео
				$("#story-item-slider").on("afterChange", function (event, slick, currentSlide) {
					var currentVideo = $(slick.$slides[currentSlide]).find("video");

					if (currentVideo.length) {
						currentVideo[0].play();
						slick.slickSetOption("autoplay", false, true); // Останавливаем autoplay пока играет видео

						// Ждём окончания видео
						currentVideo[0].onended = function () {
							slick.slickSetOption("autoplay", true, true); // Включаем autoplay снова
							slick.slickNext(); // Переключаемся на следующий слайд
						};
					} else {
						slick.slickSetOption("autoplay", true, true); // Включаем autoplay для изображений
					}
				});
			},

			beforeClose: function () {
				$("#story-item-slider").slick("unslick"); // Уничтожаем слайдер перед закрытием
			},
		});
	});
});

$(document).ready(function () {
	// Найти все <img> элементы с атрибутом data-svg
	$("img[data-svg]").each(function () {
		const $img = $(this); // Ссылка на текущий элемент
		const imgSrc = $img.attr("src"); // Получить путь к SVG

		if (imgSrc && imgSrc.endsWith(".svg")) {
			// Загрузить SVG через AJAX
			$.get(imgSrc, function (svgData) {
				const $svg = $(svgData).find("svg"); // Извлечь <svg> из ответа

				if ($svg.length) {
					// Если у SVG нет атрибута viewBox, создать его из width и height
					if (!$svg.attr("viewBox")) {
						const width = parseFloat($svg.attr("width")) || 0;
						const height = parseFloat($svg.attr("height")) || 0;

						if (width > 0 && height > 0) {
							$svg.attr("viewBox", `0 0 ${width} ${height}`);
						}
					}

					// Скопировать атрибуты <img> в <svg>, кроме src и data-svg
					$.each($img[0].attributes, function () {
						if (this.name !== "src" && this.name !== "data-svg") {
							$svg.attr(this.name, this.value);
						}
					});

					// Заменить <img> на <svg>
					$img.replaceWith($svg);
				}
			}).fail(function () {
				console.error(`Ошибка загрузки SVG: ${imgSrc}`);
			});
		}
	});
});

$(document).ready(function () {
	function tabs(navItems, contentItems, hasBottomMenu = false, navBottomItems) {
		$(navItems).eq(0).addClass("active");
		$(contentItems).eq(0).addClass("active");

		$(navItems).on("click", function (e) {
			e.preventDefault();
			let index = $(this).index();
			$(this).addClass("active").siblings().removeClass("active");

			if (hasBottomMenu) {
				$(navBottomItems).eq(index).addClass("active").siblings().removeClass("active");
			}

			$(contentItems).eq(index).addClass("active").siblings().removeClass("active");
		});

		if (hasBottomMenu) {
			$(navBottomItems).eq(0).addClass("active");

			$(navBottomItems).on("click", function (e) {
				e.preventDefault();
				let index = $(this).index();
				$(this).addClass("active").siblings().removeClass("active");

				$(navItems).eq(index).trigger("click");
			});
		}
	}
	tabs(".news-tabs-nav__item", ".news-tabs-content-list");
	tabs(".members-block .members-nav-top .members-nav__item", ".members-block .members-content");
	tabs(".baza-nav__item", ".baza-item");
	tabs(".playlist-nav__item", ".playlist-item");
	tabs(".playlist-video-nav__item", ".playlist-video");
});

//# sourceMappingURL=../sourcemaps/main.min.js.map
